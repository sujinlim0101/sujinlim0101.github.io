{"componentChunkName":"component---src-templates-blog-template-js","path":"/react/jsx/","result":{"data":{"cur":{"id":"cf37d024-1fef-538d-b9b2-f8c79bd4acab","html":"<h2 id=\"이전-불편했던-코드-스타일\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A0%84-%EB%B6%88%ED%8E%B8%ED%96%88%EB%8D%98-%EC%BD%94%EB%93%9C-%EC%8A%A4%ED%83%80%EC%9D%BC\" aria-label=\"이전 불편했던 코드 스타일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이전 불편했던 코드 스타일</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">funcion App() {\n  return React.createElement('div', {}, 'hello world!')\n}</code></pre></div>\n<p>createElement로 엘레멘트를 만들어줬는데 불편했다.\nHTML처럼 만들어진게 JSX이다.</p>\n<h2 id=\"차이점\" style=\"position:relative;\"><a href=\"#%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>차이점</h2>\n<ul>\n<li>class 대신 className을 사용해야한다.</li>\n<li>onclick → onClick</li>\n<li>HTML은 마크업 언어이고, JSX는 자바스크립트 코드이다. 바벨이 자바스크립트와 HTML으로 변환한다.</li>\n<li>안에 변수나 함수, 비즈니스 로직을 쓰고싶다면 괄호를 작성해서 쓰면된다.</li>\n<li>형제 노드를 쓸수없다.</li>\n<li>한가지 태그로 꼭 감싸줘야한다. 그래서 React.Fragment를 사용하곤 한다. 아님 &#x3C;>&#x3C;/></li>\n<li>안에 자바스크립트 코드가 가능하다.</li>\n</ul>","excerpt":"이전 불편했던 코드 스타일 createElement로 엘레멘트를 만들어줬는데 불편했다.\nHTML처럼 만들어진게 JSX이다. 차이점 class 대신 className을 사용해야한다. onclick → onClick HTML은 마크업 언어이고, JSX는 자바스크립트 코드이다. 바벨이 자바스크립트와 HTML으로 변환한다. 안에 변수나 함수, 비즈니스 로직을 쓰고싶다면 괄호를 작성해서 쓰면된다. 형제 노드를 쓸수없다. 한가지 태그로 꼭 감싸줘야한다. 그래서 React.Fragment를 사용하곤 한다. 아님 <></> 안에 자바스크립트 코드가 가능하다.","frontmatter":{"date":"October 19, 2021","title":"JSX와 HTML 차이점","categories":"react","author":"찐코딩","emoji":"✒️"},"fields":{"slug":"/react/jsx/"}},"next":{"id":"07e8674a-18f7-5170-bc95-5c5e93bc065b","html":"<p>대부분의 우리는 npm 패키지 매니저를 이용하므로 부트스트랩을 설치하면, node_modules 아래 bootstrap의 구조는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">프로젝트/\n├── scss\n│   └── custom.scss\n└── node_modules/\n    └── bootstrap\n        ├── js\n        └── scss</code></pre></div>\n<p>npm 패키지 매니저를 이용하면, node_modules 아래 파일들을 수정하면 이 파일들은 언제든지 install 과정에서 덮어써질수 있습니다.\n그렇기 때문에 부트스트랩을 직접 수정하지 않기보단 다른 방법을 사용하는 것이 바람직합니다. 따라서 이 글에서는 bootstrap을 일부만 포함하는 방법과 Sass variable을 오버라이드하여 사용하는 방법에 대해 소개하려고 합니다.</p>\n<h2 id=\"1-bootstrap을-일부만-포함하기\" style=\"position:relative;\"><a href=\"#1-bootstrap%EC%9D%84-%EC%9D%BC%EB%B6%80%EB%A7%8C-%ED%8F%AC%ED%95%A8%ED%95%98%EA%B8%B0\" aria-label=\"1 bootstrap을 일부만 포함하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Bootstrap을 일부만 포함하기</h2>\n<p>부트스트랩 전체를 포함하지 않고 일부만 포함하는 방법을 알아봅시다.</p>\n<h3 id=\"전체-포함하는-경우\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%ED%8F%AC%ED%95%A8%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\" aria-label=\"전체 포함하는 경우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 포함하는 경우</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Option A: 모든 부트스트랩 파일 포함하기</span>\n\n<span class=\"token comment\">// Include any default variable overrides here (though functions won't be available)</span>\n\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/bootstrap\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Then add additional custom code here</span></code></pre></div>\n<h3 id=\"일부-포함\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B6%80-%ED%8F%AC%ED%95%A8\" aria-label=\"일부 포함 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일부 포함</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Option B: 일부 부트스트립 파일 포함하기</span>\n\n<span class=\"token comment\">// 1. funcions를 먼저 import (colors, SVGs, calc, etc 에 대한 함수)</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/functions\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. custom variable를 여기서 포함하기</span>\n\n<span class=\"token comment\">// 3. 나머지 스타일 시트 포함</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/variables\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/mixins\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/root\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 4. 우리 프로젝트에 필요한 옵셔널한 css 포함</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/utilities\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/reboot\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/type\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/images\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/containers\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/grid\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/helpers\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 5. 옵셔널한 utilities API 포함</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/utilities/api\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 6. 다른 css 파일 포함</span></code></pre></div>\n<p>위처럼 개별로 import 해주면 일부만 포함할수 있습니다.</p>\n<h2 id=\"2-variable-활용하기\" style=\"position:relative;\"><a href=\"#2-variable-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 variable 활용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Variable 활용하기</h2>\n<h3 id=\"variable-defaults\" style=\"position:relative;\"><a href=\"#variable-defaults\" aria-label=\"variable defaults permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variable defaults</h3>\n<p>부트스트랩의 모든 Sass 변수는 !default 플래그가 포함되어 있어 부트스트랩 코드를 수정하지 않고도 Sass에서 변수의 기본값을 재정의할수 있습니다. 즉 부트스트랩에선 변수가 이미 할당된 경우 부트스트랩의 default 값이 할당되지 않습니다.</p>\n<p>만약 우리가 bootstrap variables 중 heading line-height가 마음에 들지 않는다면 $headings-line-height를 미리 정의해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/functions\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// $headings-line-height 정의하기</span>\n$headings<span class=\"token operator\">-</span>line<span class=\"token operator\">-</span>height<span class=\"token operator\">:</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// bootstrap $headings-line-height default값이 적용안됨</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/variables\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<p>참고 문서</p>\n<p>부트스트랩 5 Sass( <a href=\"https://getbootstrap.com/docs/5.0/customize/sass/\">링크</a> )</p>\n<p>Sass 변수와 !default 플래그 ( <a href=\"https://designmeme.github.io/ko/blog/sass-variables-and-default-flag/\">링크</a> )</p>","frontmatter":{"date":"October 19, 2021","title":"Bootstrap에서 Sass 활용하기","categories":"css","author":"찐코딩","emoji":"✒️"},"fields":{"slug":"/css/bootstrap-sass/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://sujinlim0101.github.io","comments":{"utterances":{"repo":"sujinlim0101/sujinlim0101.github.io"}}}}},"pageContext":{"slug":"/react/jsx/","nextSlug":"/css/bootstrap-sass/","prevSlug":""}},"staticQueryHashes":["1073350324","2938748437"]}