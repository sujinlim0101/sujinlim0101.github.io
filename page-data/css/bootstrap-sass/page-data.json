{"componentChunkName":"component---src-templates-blog-template-js","path":"/css/bootstrap-sass/","result":{"data":{"cur":{"id":"07e8674a-18f7-5170-bc95-5c5e93bc065b","html":"<h1 id=\"bootstrap에서-sass-활용하기\" style=\"position:relative;\"><a href=\"#bootstrap%EC%97%90%EC%84%9C-sass-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"bootstrap에서 sass 활용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bootstrap에서 Sass 활용하기</h1>\n<p>대부분의 우리는 npm 패키지 매니저를 이용하므로 부트스트랩을 설치하면, node_modules 아래 bootstrap의 구조는 다음과 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">프로젝트/\n├── scss\n│   └── custom.scss\n└── node_modules/\n    └── bootstrap\n        ├── js\n        └── scss</code></pre></div>\n<p>npm 패키지 매니저를 이용하면, node_modules 아래 파일들을 수정하면 이 파일들은 언제든지 install 과정에서 덮어써질수 있습니다.\n그렇기 때문에 부트스트랩을 직접 수정하지 않기보단 다른 방법을 사용하는 것이 바람직합니다. 따라서 이 글에서는 bootstrap을 일부만 포함하는 방법과 Sass variable을 오버라이드하여 사용하는 방법에 대해 소개하려고 합니다.</p>\n<h2 id=\"1-bootstrap을-일부만-포함하기\" style=\"position:relative;\"><a href=\"#1-bootstrap%EC%9D%84-%EC%9D%BC%EB%B6%80%EB%A7%8C-%ED%8F%AC%ED%95%A8%ED%95%98%EA%B8%B0\" aria-label=\"1 bootstrap을 일부만 포함하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Bootstrap을 일부만 포함하기</h2>\n<p>부트스트랩 전체를 포함하지 않고 일부만 포함하는 방법을 알아봅시다.</p>\n<h3 id=\"전체-포함하는-경우\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%ED%8F%AC%ED%95%A8%ED%95%98%EB%8A%94-%EA%B2%BD%EC%9A%B0\" aria-label=\"전체 포함하는 경우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 포함하는 경우</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Option A: 모든 부트스트랩 파일 포함하기</span>\n\n<span class=\"token comment\">// Include any default variable overrides here (though functions won't be available)</span>\n\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/bootstrap\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Then add additional custom code here</span></code></pre></div>\n<h3 id=\"일부-포함\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B6%80-%ED%8F%AC%ED%95%A8\" aria-label=\"일부 포함 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일부 포함</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Option B: 일부 부트스트립 파일 포함하기</span>\n\n<span class=\"token comment\">// 1. funcions를 먼저 import (colors, SVGs, calc, etc 에 대한 함수)</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/functions\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2. custom variable를 여기서 포함하기</span>\n\n<span class=\"token comment\">// 3. 나머지 스타일 시트 포함</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/variables\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/mixins\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/root\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 4. 우리 프로젝트에 필요한 옵셔널한 css 포함</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/utilities\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/reboot\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/type\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/images\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/containers\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/grid\"</span><span class=\"token punctuation\">;</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/helpers\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 5. 옵셔널한 utilities API 포함</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/utilities/api\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 6. 다른 css 파일 포함</span></code></pre></div>\n<p>위처럼 개별로 import 해주면 일부만 포함할수 있습니다.</p>\n<h2 id=\"2-variable-활용하기\" style=\"position:relative;\"><a href=\"#2-variable-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 variable 활용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Variable 활용하기</h2>\n<h3 id=\"variable-defaults\" style=\"position:relative;\"><a href=\"#variable-defaults\" aria-label=\"variable defaults permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Variable defaults</h3>\n<p>부트스트랩의 모든 Sass 변수는 !default 플래그가 포함되어 있어 부트스트랩 코드를 수정하지 않고도 Sass에서 변수의 기본값을 재정의할수 있습니다. 즉 부트스트랩에선 변수가 이미 할당된 경우 부트스트랩의 default 값이 할당되지 않습니다.</p>\n<p>만약 우리가 bootstrap variables 중 heading line-height가 마음에 들지 않는다면 $headings-line-height를 미리 정의해주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/functions\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// $headings-line-height 정의하기</span>\n$headings<span class=\"token operator\">-</span>line<span class=\"token operator\">-</span>height<span class=\"token operator\">:</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// bootstrap $headings-line-height default값이 적용안됨</span>\n@<span class=\"token keyword\">import</span> <span class=\"token string\">\"../node_modules/bootstrap/scss/variables\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<p>참고 문서</p>\n<p>부트스트랩 5 Sass( <a href=\"https://getbootstrap.com/docs/5.0/customize/sass/\">링크</a> )</p>\n<p>Sass 변수와 !default 플래그 ( <a href=\"https://designmeme.github.io/ko/blog/sass-variables-and-default-flag/\">링크</a> )</p>","excerpt":"Bootstrap에서 Sass 활용하기 대부분의 우리는 npm 패키지 매니저를 이용하므로 부트스트랩을 설치하면, node_modules 아래 bootstrap의 구조는 다음과 같습니다. npm 패키지 매니저를 이용하면, node_modules 아래 파일들을 수정하면 이 파일들은 언제든지 install 과정에서 덮어써질수 있습니다.\n그렇기 때문에 부트스트랩을 직접 수정하지 않기보단 다른 방법을 사용하는 것이 바람직합니다. 따라서 이 글에서는 bootstrap을 일부만 포함하는 방법과 Sass variable을 오버라이드하여 사용하는 방법에 대해 소개하려고 합니다. 1. Bootstrap을 일부만 포함하기 부트스트랩 전체…","frontmatter":{"date":"October 19, 2021","title":"Bootstrap에서 Sass 활용하기","categories":"css","author":"찐코딩","emoji":"✒️"},"fields":{"slug":"/css/bootstrap-sass/"}},"next":{"id":"e211e323-02b5-54bf-b41f-e61c606cb436","html":"<h2 id=\"type을-써야하는-이유\" style=\"position:relative;\"><a href=\"#type%EC%9D%84-%EC%8D%A8%EC%95%BC%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"type을 써야하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>type을 써야하는 이유</h2>\n<p>input을 만들때 type을 고려하는 것이 중요합니다. 하지만, 종종 우리는 type=“text”로만 input을 만들고, 그 이외의 type들에 대해서는 생각하지 않는 경향이 있습니다.</p>\n<p>하지만 text, 그리고 email, password 말고도 다양한 타입들이 있습니다.</p>\n<p>우리가 타입을 특정해서 사용할 때 좋은 점은 더 좋은 autocompletion을 사용할수 있다는 점입니다. 또, 스크린리더에게 더 좋은 해석을 할수 있게 하며, 결과적으로 유저에게 정보를 잘 이해시킬수 있습니다.</p>\n<p>예를 들어, tel이라는 타입을 쓰는 경우 유저에게 유용합니다. 모바일 환경의 유저에게 [+*#] 버튼이 달린 numeric keyboard를 이용하게 할수 있는 듯이 말이죠.</p>\n<h2 id=\"input-type-종류\" style=\"position:relative;\"><a href=\"#input-type-%EC%A2%85%EB%A5%98\" aria-label=\"input type 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>input type 종류</h2>\n<ul>\n<li>button</li>\n<li>checkbox</li>\n<li>email</li>\n<li>file</li>\n<li>hidden</li>\n<li>image</li>\n<li>month</li>\n<li>number</li>\n<li>password</li>\n<li>radio</li>\n<li>range</li>\n<li>reset</li>\n<li>search</li>\n<li>submit</li>\n<li>tel</li>\n<li>text</li>\n<li>time</li>\n<li>url</li>\n<li>week</li>\n<li>color</li>\n<li>date</li>\n<li>datetime-local</li>\n</ul>\n<p>이렇듯 input 엘레멘트의 종류에는 여러가지 있습니다. 그러므로, input을 쓰기전에 타입을 고려해서 작성해 보시는 건 어떨까요?</p>\n<h2 id=\"placeholder에만-의존하지-말기\" style=\"position:relative;\"><a href=\"#placeholder%EC%97%90%EB%A7%8C-%EC%9D%98%EC%A1%B4%ED%95%98%EC%A7%80-%EB%A7%90%EA%B8%B0\" aria-label=\"placeholder에만 의존하지 말기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>placeholder에만 의존하지 말기</h2>\n<p>input에 예전에 유행하던 것중에 하나가 placeholder로 input이 어떤것인지 표현하는 것입니다. 이것은 아직도 가끔 보이기도 하는데 참 안좋은 패턴입니다.</p>\n<p>placeholder는 예시와 같은 intended한 값을 표현할 때 써야하는데, 라벨을 대신해버리는 것입니다. 유저가 필드를 입력할때 이 값은 지워지므로, 사용자는 이것이 무엇에 관한 것이였는지 기억해야만합니다. 또, 어떤 유저는 이 값이 이미 채워진 값이라고도 생각할수 있습니다.</p>\n<h3 id=\"firefox-개발자-도구-이용하기\" style=\"position:relative;\"><a href=\"#firefox-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EB%8F%84%EA%B5%AC-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"firefox 개발자 도구 이용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Firefox 개발자 도구 이용하기</h3>\n<p>Firefox의 접근성 탭을 이용하면, 더 쉽게 웹에 어떻게 접근성이 적용되어있는지 보기 쉽습니다. Firefox의 개발자 도구를 활용해보는 것도 좋을거라고 생각합니다.</p>","frontmatter":{"date":"October 16, 2021","title":"input에서 a11y 고려하기","categories":"a11y","author":"찐코딩","emoji":"✒️"},"fields":{"slug":"/input/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://sujinlim0101.github.io","comments":{"utterances":{"repo":"sujinlim0101/sujinlim0101.github.io"}}}}},"pageContext":{"slug":"/css/bootstrap-sass/","nextSlug":"/input/","prevSlug":""}},"staticQueryHashes":["1073350324","2938748437"]}