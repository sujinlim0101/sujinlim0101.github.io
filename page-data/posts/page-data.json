{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","categories":["All","블로그","book","react","vue3","css","a11y"],"edges":[{"node":{"id":"29bdff67-63f0-557d-b6f9-b5d45be204d4","excerpt":"Yarn Berry 도입! 회사에서 vue 프로젝트에서 npm을 패키지 매니저로 사용하고 있었는데, yarn으로 전환되었습니다! 👏👏 Yarn Berry로 전환한 이유 브랜치를 옮겨가면서 작업한는 경우가 많은데 그 때마다  로 패키지들을 설치하는 과정이 너무 번거롭고, 시간도 많이 걸렸습니다. 유령 의존성 현상으로, 직접 의존하고 있지 않은 라이브러리를 사용할 수 있는 문제도 제기됐습니다. 알게된 개념들 이번에 Yarn Berry를 적용하면서 알게되었던 개념들을 정리해봤습니다. 1. Zero-install 의존성을 압축파일로 관리하고, 해당 압축파일을 remote branch에 업로드해 관리합니다. 이로써, 브랜치를 …","fields":{"slug":"/vue3/yarn-berry/"},"frontmatter":{"categories":"블로그","title":"프로젝트 yarn berry 적용기","date":"March 31, 2022"}},"next":{"fields":{"slug":"/design-pattern/observer-pattern/"}},"previous":null},{"node":{"id":"2e491af8-5533-5330-ad09-a6ffe986ca84","excerpt":"옵저버 패턴 객체들에게 연락망을 돌립시다. 기상 모니터링 애플리케이션 개요 시스템은 기상 스테이션과 WeatherData 객체, 그리고 사용자에게 현재 기상 조건을 보여주는 디스플레이 이렇게 세요소로 이루어집니다. WeatherDate 클래스 getTemperature, getHumidity, measurementsChanged가 있습니다. 지금 알고 있는 것들 Weather-O-Rama에서 준 규격은 그리 분명하지가 않습니다. 하지만 우엇을 할지는 확실하게 알고 넘어가야합니다. 지금 우리가 알고 있는 것들을 한번 정리해보죠. 새로운 기상 데이터가 나올 때마다 measurementsChanged 매소드가 호출됩니다. …","fields":{"slug":"/design-pattern/observer-pattern/"},"frontmatter":{"categories":"book","title":"디자인패턴 - 옵저버 패턴 알아보기","date":"October 25, 2021"}},"next":{"fields":{"slug":"/design-pattern/design-pattern/"}},"previous":{"fields":{"slug":"/vue3/yarn-berry/"}}},{"node":{"id":"25de2742-d759-5100-a190-c3b52c5339ce","excerpt":"1. 디자인패턴 소개 디자인패턴의 세계에 오신것을 환영합니다. 누군가 이미 여러분의 문제를 해결해놓았습니다. 그 문제를 해결했던 다른 개발자들이 익혔던 지혜와 교훈을 왜 활용해야했는지, 그리고 어떻게 활용할 수 있는지에 대해 배우게될것입니다. 문제는 간단한 simUDuck 애플리케이션을 시작했습니다. 오리애플리케이션을 클래스와 객체지향기법을 활용해서 시작했습니다. 근데, 경쟁회사가 생겼습니다..! 이제는 오리들이 날수 있도록 해야합니다. 오리를 날아다니게 해야한다고 임원진들이 말합니다. 객체지향도 하는데, 문제없다고 조는 말합니다. 심각한 문제 등장 오리 인형까지 날아다니는 문제가 있었습니다. Duck이란 슈퍼크래스에…","fields":{"slug":"/design-pattern/design-pattern/"},"frontmatter":{"categories":"book","title":"디자인패턴 - 디자인패턴","date":"October 25, 2021"}},"next":{"fields":{"slug":"/react/jsx/"}},"previous":{"fields":{"slug":"/design-pattern/observer-pattern/"}}},{"node":{"id":"cf37d024-1fef-538d-b9b2-f8c79bd4acab","excerpt":"이전 불편했던 코드 스타일 createElement로 엘레멘트를 만들어줬는데 불편했다.\nHTML처럼 만들어진게 JSX이다. 차이점 class 대신 className을 사용해야한다. onclick → onClick HTML은 마크업 언어이고, JSX는 자바스크립트 코드이다. 바벨이 자바스크립트와 HTML으로 변환한다. 안에 변수나 함수, 비즈니스 로직을 쓰고싶다면 괄호를 작성해서 쓰면된다. 형제 노드를 쓸수없다. 한가지 태그로 꼭 감싸줘야한다. 그래서 React.Fragment를 사용하곤 한다. 아님 <></> 안에 자바스크립트 코드가 가능하다.","fields":{"slug":"/react/jsx/"},"frontmatter":{"categories":"react","title":"JSX와 HTML 차이점","date":"October 19, 2021"}},"next":{"fields":{"slug":"/react/class-function/"}},"previous":{"fields":{"slug":"/design-pattern/design-pattern/"}}},{"node":{"id":"15fab569-bf11-5655-8352-44843d1fb81f","excerpt":"클래스는 리액트가 제공하는 컴포넌트라는 클래스를 extends해서 만들수 있다. 예전 리액트 클래스와 함수 예전에 리액트에선, 컴포넌트에 state가 있고, 주기적으로 업데이트 되야한다면 클래스형 컴포넌트를 쓰고 아니라면 함수형을 쓰곤 했었다. 그래서 클래스형에서는 state라는 오브젝트가 있었고, 이 state 값이 변경되면 렌더함수가 다시 호출되면서 업데이트 내용이 뷰에 반영됩니다. 그리고 dom에 mount되었을 때, 업데이트가 있을 때 등 다양한 라이프 사이클 함수가 있었고, 이것 또한 함수형과 구별되는 특징이였다. 16.8버전 이후 함수형에 state와 라이프사이클 메서드가 추가되었다. 즉, 기존에 할수 없었…","fields":{"slug":"/react/class-function/"},"frontmatter":{"categories":"react","title":"Class vs Function","date":"October 19, 2021"}},"next":{"fields":{"slug":"/css/bootstrap-sass/"}},"previous":{"fields":{"slug":"/react/jsx/"}}},{"node":{"id":"07e8674a-18f7-5170-bc95-5c5e93bc065b","excerpt":"대부분의 우리는 npm 패키지 매니저를 이용하므로 부트스트랩을 설치하면, node_modules 아래 bootstrap의 구조는 다음과 같습니다. npm 패키지 매니저를 이용하면, node_modules 아래 파일들을 수정하면 이 파일들은 언제든지 install 과정에서 덮어써질수 있습니다.\n그렇기 때문에 부트스트랩을 직접 수정하지 않기보단 다른 방법을 사용하는 것이 바람직합니다. 따라서 이 글에서는 bootstrap을 일부만 포함하는 방법과 Sass variable을 오버라이드하여 사용하는 방법에 대해 소개하려고 합니다. 1. Bootstrap을 일부만 포함하기 부트스트랩 전체를 포함하지 않고 일부만 포함하는 방법을…","fields":{"slug":"/css/bootstrap-sass/"},"frontmatter":{"categories":"css","title":"Bootstrap 5의 Sass","date":"October 19, 2021"}},"next":{"fields":{"slug":"/a11y/input/"}},"previous":{"fields":{"slug":"/react/class-function/"}}},{"node":{"id":"1b5cb6a5-c0d4-570b-b57e-ec0fc6247ece","excerpt":"type을 써야하는 이유 input을 만들때 type을 고려하는 것이 중요합니다. 하지만, 종종 우리는 type=“text”로만 input을 만들고, 그 이외의 type들에 대해서는 생각하지 않는 경향이 있습니다. 하지만 text, 그리고 email, password 말고도 다양한 타입들이 있습니다. 우리가 타입을 특정해서 사용할 때 좋은 점은 더 좋은 autocompletion을 사용할수 있다는 점입니다. 또, 스크린리더에게 더 좋은 해석을 할수 있게 하며, 결과적으로 유저에게 정보를 잘 이해시킬수 있습니다. 예를 들어, tel이라는 타입을 쓰는 경우 유저에게 유용합니다. 모바일 환경의 유저에게 +*# 버튼이 달린 …","fields":{"slug":"/a11y/input/"},"frontmatter":{"categories":"a11y","title":"input에서 a11y 고려하기","date":"October 16, 2021"}},"next":{"fields":{"slug":"/why-blog/"}},"previous":{"fields":{"slug":"/css/bootstrap-sass/"}}},{"node":{"id":"173b959c-a720-5adb-ab79-358dd8a508b2","excerpt":"🙋‍♂️ 내 소개 + 블로그 소개 개발 블로그 시작 이유 지식공유를 위해서 구글링 하면서 자료를 찾는 와중에 여러 개발블로그들을 들리게 되었고, 저도 제가 알게된게 유용할 때 알리고 싶다는 생각이 커졌습니다. 그래서 새롭게 알게된 내용을 조금씩 정리해보려고 합니다. 잊어버리지 않기 위해서 머릿 속 지식이 영원할거 같지만 그렇지 않았습니다. 예전에는 정말 상세히 공부했던 부분도 잊어버리곤했습니다. 그리고, 정리하지 않은 부분들이 머리속에서 뒤섞여있는 느낌이였습니다. 하지만, 회사에서 개발 문서를 작성했던 경험으로 점점 지식들이 정리되고, 잊어버리지 않게 된다는 것을 알게되어서 저도 제 개인 블로그를 갖고 싶다는 생각이 들었습…","fields":{"slug":"/why-blog/"},"frontmatter":{"categories":"블로그","title":"왜 개발 블로그를 하시나요?","date":"September 26, 2021"}},"next":{"fields":{"slug":"/vue3/vee-validate-yup/"}},"previous":{"fields":{"slug":"/a11y/input/"}}},{"node":{"id":"5ba59386-97e6-5b10-b30a-ea74a0698285","excerpt":"폼 유효성 검사를 일일히 작성하기에는 복잡하기 때문에 라이브러리를 이용하는 편입니다. 기존 프로젝트에서는 angularjs를 이용했기 때문에, angularjs의 validation을 이용하였습니다. 하지만 vue애선 달리 제공하는 validation이 없기 때문에, 인기가 있는 vee-validate 라이브러리에 관심을 갖게 되었습니다. Vee-validate는 Yup과의 조합도 좋습니다. 리액트에서도 Formik + Yup 조합으로 많이 씁니다. 우리는 Vue니까 Formik가 아닌 Vee-validate를 사용해봅시다. Vee-validate + Yup 게다가 이 두개의 조합을 vee-validate 공식 사이트…","fields":{"slug":"/vue3/vee-validate-yup/"},"frontmatter":{"categories":"vue3","title":"Vee-validation + Yup 조합 사용하기","date":"September 26, 2021"}},"next":{"fields":{"slug":"/vue3/image-lazyloading-function/"}},"previous":{"fields":{"slug":"/why-blog/"}}},{"node":{"id":"80d8cd1a-0c64-547f-bf91-649902d56284","excerpt":"Intersection Observer API는 웹 API중 하나로 한국말로 해석하자면 교차 관찰자 정도로 해석할수 있을거 같습니다. 크롬 51버전부터 사용할 수 있고, 많은 브라우저에서 지원되지만 안타깝게도 우리의 Internet Explorer는 역시나 지원하지 않습니다. 지원하는 브라우저는 다음 그림과 같습니다. IE는 지원이 아예안되고, 몇몇 사용자가 많지 않는 브라우저들에서 지원하지 않는걸로 보이네요.  useImageLazy 함수 활용 하지만, 지원하지 않는 브라우저라고 하더라도, 에러가 나지 않고 이미지가 잘 노출될수 있도록 아래 useImageLazy 함수에선 신경써서 잘 구현해놓았습니다. 1. getI…","fields":{"slug":"/vue3/image-lazyloading-function/"},"frontmatter":{"categories":"vue3","title":"vue 3에서 이미지 레이지 로딩 함수 활용하기","date":"September 21, 2021"}},"next":null,"previous":{"fields":{"slug":"/vue3/vee-validate-yup/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}