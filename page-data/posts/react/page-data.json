{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/react","result":{"pageContext":{"currentCategory":"react","categories":["All","react","vue3","css","a11y","블로그"],"edges":[{"node":{"id":"cf37d024-1fef-538d-b9b2-f8c79bd4acab","excerpt":"이전 불편했던 코드 스타일 createElement로 엘레멘트를 만들어줬는데 불편했다.\nHTML처럼 만들어진게 JSX이다. 차이점 class 대신 className을 사용해야한다. onclick → onClick HTML은 마크업 언어이고, JSX는 자바스크립트 코드이다. 바벨이 자바스크립트와 HTML으로 변환한다. 안에 변수나 함수, 비즈니스 로직을 쓰고싶다면 괄호를 작성해서 쓰면된다. 형제 노드를 쓸수없다. 한가지 태그로 꼭 감싸줘야한다. 그래서 React.Fragment를 사용하곤 한다. 아님 <></> 안에 자바스크립트 코드가 가능하다.","fields":{"slug":"/react/jsx/"},"frontmatter":{"categories":"react","title":"JSX와 HTML 차이점","date":"October 19, 2021"}},"next":{"fields":{"slug":"/css/bootstrap-sass/"}},"previous":null},{"node":{"id":"15fab569-bf11-5655-8352-44843d1fb81f","excerpt":"클래스는 리액트가 제공하는 컴포넌트라는 클래스를 extends해서 만들수 있다. 예전 리액트 클래스와 함수 예전에 리액트에선, 컴포넌트에 state가 있고, 주기적으로 업데이트 되야한다면 클래스형 컴포넌트를 쓰고 아니라면 함수형을 쓰곤 했었다. 그래서 클래스형에서는 state라는 오브젝트가 있었고, 이 state 값이 변경되면 렌더함수가 다시 호출되면서 업데이트 내용이 뷰에 반영됩니다. 그리고 dom에 mount되었을 때, 업데이트가 있을 때 등 다양한 라이프 사이클 함수가 있었고, 이것 또한 함수형과 구별되는 특징이였다. 16.8버전 이후 함수형에 state와 라이프사이클 메서드가 추가되었다. 즉, 기존에 할수 없었…","fields":{"slug":"/react/class-function/"},"frontmatter":{"categories":"react","title":"Class vs Function","date":"October 19, 2021"}},"next":{"fields":{"slug":"/a11y/input/"}},"previous":{"fields":{"slug":"/css/bootstrap-sass/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}